{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\uywen africa\\\\iTunes-App\\\\frontend\\\\src\\\\components\\\\output-item\\\\Item.js\",\n    _s = $RefreshSig$();\n\n// Import components from react\nimport React, { useEffect, useState } from 'react'; // Import components from react-bootstrap\n\nimport { Button } from 'react-bootstrap'; // Import items from Font Awesome\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHeart as faSolidHeart } from '@fortawesome/free-solid-svg-icons'; // Import css\n\nimport './item.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Item = _ref => {\n  _s();\n\n  let {\n    item,\n    fetchFavourites,\n    favourites\n  } = _ref;\n  const [addFavClicked, setAddFavClicked] = useState(false); // UseState to save wether the item has been added to favourites or not\n  // Function to determine the id of the item\n\n  const id = // If there is a 'trackId' then use 'trackId' as the id...\n  item.trackId ? item.trackId : // ...else...\n  // ...if there is an 'artistId' and a 'collectionId'...\n  item.artistId && item.collectionId ? // ...then...\n  // ...add 'artistId' and 'collectionId' and use that as the id...\n  Number(item.artistId) + Number(item.collectionId) : // ...else...\n  // ...if there is just an 'artistId' then use 'artistId' as the id, else use the 'collectionId' as the id\n  item.artistId ? item.artistId : item.collectionId; // Function that preforms an API request that adds the item to 'favourites'\n\n  const addItem = async () => {\n    await fetch('/api/add', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id,\n        favItem: item\n      })\n    });\n    fetchFavourites(); // Run 'fetchFavourites'\n  }; // Function that preforms an API request to remove the item from 'favourites'\n\n\n  const removeItem = async () => {\n    await fetch(`/api/delete/${id}`, {\n      method: 'DELETE'\n    });\n    fetchFavourites(); // Run 'fetchFavourites'\n  }; // Function that handles the adding of the item to 'favourites'\n\n\n  const handleAdd = e => {\n    e.preventDefault(); // Prevent default actions\n\n    setAddFavClicked(true); // Set the state to true to show a read heart to show that the item is in 'favourites'\n\n    addItem(); // Run 'addItem' to save the item to 'favourites'\n  }; // Function that handles removing an item from 'favourites'\n\n\n  const handleRemove = e => {\n    e.preventDefault(); // Prevent default actions\n\n    setAddFavClicked(false); // Set the state back false to show that the item is not in 'favourites'\n\n    removeItem(); // Run 'removeItem' to remove the item from 'favourites'\n  }; // Function to determine which URL to use when 'View more' is clicked\n  // If the item has a 'trackViewUrl' then use 'trackViewUrl', else use 'collectionViewUrl'\n\n\n  const viewMoreUrl = item.trackViewUrl ? item.trackViewUrl : item.collectionViewUrl; // Function that handles what happens then the 'View more' button is clicked\n\n  const handleViewMore = () => {\n    // This creates a new tab and takes you to a page which allows you to view more info about the item\n    window.open(viewMoreUrl);\n  }; // UseEffect that checks if the item has already been added to 'favourites' or not\n\n\n  useEffect(() => {\n    // If 'favourites' exists and does not equal undefined...\n    if (favourites && favourites !== undefined) {\n      // ...then loop through favourites\n      for (let i = 0; i < favourites.length; i++) {\n        // If the id of the item in 'favourites' is equal to this item's id...\n        if (favourites[i].id === id) {\n          // ...then set the state to true to show that the item is in 'favourites'\n          setAddFavClicked(true);\n        }\n      }\n    }\n  }, [favourites, id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"output-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"img\",\n      children: item.artworkUrl100 ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: item.artworkUrl100,\n        alt: \"media artwork\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 16\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"img-text\",\n        children: \"No image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item-info\",\n      children: [!item.trackName ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"collection-name\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 19\n        }, this), \" \", item.collectionName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 16\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"track-name\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 19\n        }, this), \" \", item.trackName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"artist-name\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Artist:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 16\n        }, this), \" \", item.artistName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this), item.kind ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"kind\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 19\n        }, this), \" \", item.kind]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 16\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper-type\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 19\n        }, this), \" \", item.wrapperType]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btns\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"heart-btn\",\n        children: addFavClicked ?\n        /*#__PURE__*/\n        // On click, run 'handleRemove'\n        _jsxDEV(\"button\", {\n          onClick: handleRemove,\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faSolidHeart,\n            className: \"clicked\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 19\n        }, this) :\n        /*#__PURE__*/\n        // On click, run 'handleAdd'\n        _jsxDEV(\"button\", {\n          onClick: handleAdd,\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faSolidHeart\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view-more-btn\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"success\",\n          onClick: handleViewMore,\n          children: \"View more\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Item, \"bUkQQCp9RYivYxyd+mUNkFVpCpM=\");\n\n_c = Item;\nexport default Item;\n\nvar _c;\n\n$RefreshReg$(_c, \"Item\");","map":{"version":3,"sources":["C:/Users/uywen africa/iTunes-App/frontend/src/components/output-item/Item.js"],"names":["React","useEffect","useState","Button","FontAwesomeIcon","faHeart","faSolidHeart","Item","item","fetchFavourites","favourites","addFavClicked","setAddFavClicked","id","trackId","artistId","collectionId","Number","addItem","fetch","method","headers","body","JSON","stringify","favItem","removeItem","handleAdd","e","preventDefault","handleRemove","viewMoreUrl","trackViewUrl","collectionViewUrl","handleViewMore","window","open","undefined","i","length","artworkUrl100","trackName","collectionName","artistName","kind","wrapperType"],"mappings":"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","sourcesContent":["// Import components from react\r\nimport React, { useEffect, useState } from 'react';\r\n// Import components from react-bootstrap\r\nimport { Button } from 'react-bootstrap';\r\n// Import items from Font Awesome\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHeart as faSolidHeart } from '@fortawesome/free-solid-svg-icons';\r\n\r\n// Import css\r\nimport './item.css'\r\n\r\nconst Item = ({ item, fetchFavourites, favourites }) => {\r\n   const [addFavClicked, setAddFavClicked] = useState(false);// UseState to save wether the item has been added to favourites or not\r\n\r\n   // Function to determine the id of the item\r\n   const id = \r\n      // If there is a 'trackId' then use 'trackId' as the id...\r\n      item.trackId ? item.trackId : ( // ...else...\r\n         // ...if there is an 'artistId' and a 'collectionId'...\r\n         item.artistId && item.collectionId ? (// ...then...\r\n            // ...add 'artistId' and 'collectionId' and use that as the id...\r\n            Number(item.artistId) + Number(item.collectionId)\r\n         ) : (// ...else...\r\n            // ...if there is just an 'artistId' then use 'artistId' as the id, else use the 'collectionId' as the id\r\n            item.artistId ? item.artistId : item.collectionId\r\n         )\r\n      );\r\n\r\n   // Function that preforms an API request that adds the item to 'favourites'\r\n   const addItem = async () => {\r\n      await fetch('/api/add', {\r\n         method: 'POST',\r\n         headers: {\r\n            'Content-Type': 'application/json'\r\n         },\r\n         body: JSON.stringify({\r\n            id,\r\n            favItem: item\r\n         })\r\n      });\r\n      fetchFavourites();// Run 'fetchFavourites'\r\n   }\r\n\r\n   // Function that preforms an API request to remove the item from 'favourites'\r\n   const removeItem = async () => {\r\n      await fetch(`/api/delete/${id}`, {\r\n         method: 'DELETE'\r\n      });\r\n      fetchFavourites();// Run 'fetchFavourites'\r\n   }\r\n\r\n   // Function that handles the adding of the item to 'favourites'\r\n   const handleAdd = (e) => {\r\n      e.preventDefault();// Prevent default actions\r\n      setAddFavClicked(true);// Set the state to true to show a read heart to show that the item is in 'favourites'\r\n      addItem();// Run 'addItem' to save the item to 'favourites'\r\n   }\r\n\r\n   // Function that handles removing an item from 'favourites'\r\n   const handleRemove = (e) => {\r\n      e.preventDefault();// Prevent default actions\r\n      setAddFavClicked(false);// Set the state back false to show that the item is not in 'favourites'\r\n      removeItem();// Run 'removeItem' to remove the item from 'favourites'\r\n   }\r\n\r\n   // Function to determine which URL to use when 'View more' is clicked\r\n   // If the item has a 'trackViewUrl' then use 'trackViewUrl', else use 'collectionViewUrl'\r\n   const viewMoreUrl = item.trackViewUrl ? item.trackViewUrl : item.collectionViewUrl;\r\n\r\n   // Function that handles what happens then the 'View more' button is clicked\r\n   const handleViewMore = () => {\r\n      // This creates a new tab and takes you to a page which allows you to view more info about the item\r\n      window.open(viewMoreUrl);\r\n   }\r\n\r\n   // UseEffect that checks if the item has already been added to 'favourites' or not\r\n   useEffect(() => {\r\n      // If 'favourites' exists and does not equal undefined...\r\n      if (favourites && favourites !== undefined) {\r\n         // ...then loop through favourites\r\n         for (let i = 0; i < favourites.length; i++) {\r\n            // If the id of the item in 'favourites' is equal to this item's id...\r\n            if (favourites[i].id === id) {\r\n               // ...then set the state to true to show that the item is in 'favourites'\r\n               setAddFavClicked(true);\r\n            }\r\n         }\r\n      }\r\n   }, [favourites, id])\r\n   \r\n   return (\r\n      <div className='output-item'>\r\n         {/* Section that should display the item's artwork */}\r\n         <div className='img'>\r\n            {/* If the item has artwork then display the artwork, else display the text */}\r\n            {item.artworkUrl100 ? (\r\n               <img src={item.artworkUrl100} alt='media artwork' />\r\n            ) : (\r\n               <div className='img-text'>\r\n                  No image\r\n               </div>\r\n            )}\r\n         </div>\r\n         {/* Section that will display the item's info */}\r\n         <div className='item-info'>\r\n            {/* If there is no 'trackName' then use 'collectionName', else use 'trackName' */}\r\n            {!item.trackName ? (\r\n               <div className='collection-name'>\r\n                  <span>Name:</span> {item.collectionName}\r\n               </div>\r\n            ) : (\r\n               <div className='track-name'>\r\n                  <span>Name:</span> {item.trackName}\r\n               </div>\r\n            )}\r\n            <div className='artist-name'>\r\n               <span>Artist:</span> {item.artistName}\r\n            </div>\r\n            {/* If the item has 'kind' then display 'kind', else display 'wrapperType' */}\r\n            {item.kind ? (\r\n               <div className='kind'>\r\n                  <span>Type:</span> {item.kind}\r\n               </div>\r\n            ) : (\r\n               <div className='wrapper-type'>\r\n                  <span>Type:</span> {item.wrapperType}\r\n               </div>\r\n            )}\r\n         </div>\r\n         {/* Section that contains the buttons */}\r\n         <div className='btns'>\r\n            <div className='heart-btn'>\r\n               {/* If 'addFavClicked' is true then show a red heart to represent that the item has been added to 'favourites' or is already in 'favourites', else show a grey heart to show that the item is not in 'favourites' */}\r\n               {addFavClicked ? (\r\n                  // On click, run 'handleRemove'\r\n                  <button onClick={handleRemove}>\r\n                     <FontAwesomeIcon icon={faSolidHeart} className='clicked' />\r\n                  </button>\r\n               ) : (\r\n                  // On click, run 'handleAdd'\r\n                  <button onClick={handleAdd}>\r\n                     <FontAwesomeIcon icon={faSolidHeart} />\r\n                  </button>\r\n               )}\r\n            </div>\r\n            <div className='view-more-btn'>\r\n               {/* Button that takes you to a page that shows more info about the item */}\r\n               <Button variant='success' onClick={handleViewMore}>\r\n                  View more\r\n               </Button>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Item"]},"metadata":{},"sourceType":"module"}